console.log("MCP Operations Demo"); console.log("======================"); console.log("Node.js version:", process.version); console.log("Platform:", process.platform); const fs = require("fs"); const path = require("path"); // Define MCP operations function listFiles(directory = ".") { console.log(`\nListing files in directory: ${directory}`); try { const files = fs.readdirSync(directory); console.log("\nFiles found:"); files.forEach((file) => { const stats = fs.statSync(path.join(directory, file)); const type = stats.isDirectory() ? "Directory" : "File"; console.log(`- ${file} (${type})`); }); return files; } catch (error) { console.error(`Error listing files: ${error.message}`); return []; } } function readFile(filePath) { console.log(`\nReading file: ${filePath}`); try { if (fs.existsSync(filePath)) { const content = fs.readFileSync(filePath, "utf8"); console.log(`\nFile content (first 100 chars):\n${content.substring(0, 100)}${content.length > 100 ? "..." : ""}`); return content; } else { console.error(`File not found: ${filePath}`); return null; } } catch (error) { console.error(`Error reading file: ${error.message}`); return null; } } function createFile(filePath, content) { console.log(`\nCreating file: ${filePath}`); try { fs.writeFileSync(filePath, content); console.log(`File created successfully: ${filePath}`); return true; } catch (error) { console.error(`Error creating file: ${error.message}`); return false; } } // Run operations console.log("\n1. List files in current directory"); listFiles(); console.log("\n2. Create a test file"); createFile("mcp-test.txt", "This is a test file created by MCP operations demo."); console.log("\n3. Read the test file"); readFile("mcp-test.txt"); console.log("\n4. List files again to confirm test file exists"); listFiles(); console.log("\nMCP Operations Demo completed.");
